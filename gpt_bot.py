import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from dotenv import load_dotenv
from music import search_and_send_song
from deepseek import ask_deepseek
from feedback import send_to_admin

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

KEYBOARD = [
    ["üìú –ü—Ä–∞–≤–∏–ª–∞", "‚öôÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"],
    ["‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "üéµ –ù–∞–π—Ç–∏ –ø–µ—Å–Ω—é"],
    ["üì© –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ö–∞—Ñ–µ—à–∫—É"]
]

async def start(update: Update, context: CallbackContext):
    keyboard = ReplyKeyboardMarkup(KEYBOARD, resize_keyboard=True)
    await update.message.reply_text(
        "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –æ—Ç DISORDER CAFFE c –º—É–∑—ã–∫–æ–π –ò –í–æ—Å—Ç–æ—á–Ω—ã–º–∏ –ú—É–¥—Ä–µ—Ü–∞–º–∏. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )

async def handle_message(update: Update, context: CallbackContext):
    text = update.message.text
    user_id = update.message.from_user.id

    if text == "üìú –ü—Ä–∞–≤–∏–ª–∞":
        await update.message.reply_text("üìå –ü—Ä–∞–≤–∏–ª–∞:\n1. –ù–µ –≤–∞–ª—å—Ç—É–π\n2. –ù–µ —Å–Ω–æ—Å–∏ –∑–∞–±–æ—Ä—ã")

    elif text == "‚öôÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏":
        await update.message.reply_text(
            "‚ö°Ô∏è –Ø —É–º–µ—é:\n"
            "- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –í–æ—Å—Ç–æ—á–Ω—ã—Ö –ú—É–¥—Ä–µ—Ü–æ–≤ (–∫–Ω–æ–ø–∫–∞ ‚ùì)\n"
            "- –ò—Å–∫–∞—Ç—å –∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –º—É–∑—ã–∫—É (–∫–Ω–æ–ø–∫–∞ üéµ)\n"
            "- –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ö–∞—Ñ–µ—à–∫—É (–∫–Ω–æ–ø–∫–∞ üì©)"
        )

    elif text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è —Ç–æ–ª–∫–Ω—É –µ–≥–æ –í–æ—Å—Ç–æ—á–Ω—ã–º –ú—É–¥—Ä–µ—Ü–∞–º.")
        context.user_data["awaiting_question"] = True

    elif text == "üéµ –ù–∞–π—Ç–∏ –ø–µ—Å–Ω—é":
        await update.message.reply_text("–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:")
        context.user_data["awaiting_song"] = True

    elif text == "üì© –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ö–∞—Ñ–µ—à–∫—É":
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –∑–∞–≥–æ–Ω—é –µ–≥–æ –Ω–∞ Tokyo:")
        context.user_data["awaiting_feedback"] = True

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
    elif context.user_data.get("awaiting_question"):
        answer = await ask_deepseek(text)
        await update.message.reply_text(f"ü§ñ –û—Ç–≤–µ—Ç –ú—É–¥—Ä–µ—Ü–æ–≤:\n\n{answer}")
        context.user_data["awaiting_question"] = False

    elif context.user_data.get("awaiting_song"):
        await search_and_send_song(update, context)
        context.user_data["awaiting_song"] = False

    elif context.user_data.get("awaiting_feedback"):
        await send_to_admin(update, context, ADMIN_ID)
        await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        context.user_data["awaiting_feedback"] = False

def main():
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()